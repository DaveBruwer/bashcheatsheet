#! /usr/bin/bash

# ECHO COMMAND
# echo "hello this is my script"

#VARIABLES
# NAME="Dave"
# echo "My name is $NAME"

# USER INPUT
# read -p "Enter your name: " NAME
# echo "Hello $NAME nice to meet you!"

# SIMPLE IF-ELSE-ELSEIF
# NAME=""
# read -p "Enter your name: " NAME
# if [ $NAME == "Dave" ]
# then
# 	echo "Your name is Dave"
# elif [ $NAME == "Dawie" ]
# then
# 	echo "Jou naam is Dawie"
# else
# 	echo "Your name is not Dave, it is $NAME"
# fi

# COMPARISONS
#######
# val1 -eq val2 Returns tru if the values are equal
# val1 -ne val2 Returns true if the values are not equal
# val1 -gt val2 Returns true if val1 is greater than val2
# val1 -ge val2 Returns true if val1 is greater than or equal to val2
# val1 -lt val2 Returns true if val1 is less than val2
# val1 -le val2 Returns true if val1 is less than or equal to val2
#######

# NUM1=7
# NUM2=5
# if [ $NUM1 -ge $NUM2 ]
# then
# 	echo "$NUM1 is greater than or equal to $NUM2"
# else
# 	echo "$NUM1 is less than $NUM2"
# fi

# FILE CONDITIONING
 #######
 # -d file	True if the file is a directory
 # -e file	True if the file exists (note that this is not particularly prtable, thus -f is generally used)
 # -f file	True if the provided string is a file
 # -g file	True if the group id is set on a file
 # -r file	True if the file is readable
 # -s file	True if the file has a non-zero size
 # -u		True if the user is id is set on a file
 # -w		True if the file is writeable
 # -x		True if the file is an executable
 #######

 # FILE="test.txt"
 # if [ -e $FILE ]
 # then
 # 	echo "$FILE exists"
 # else
 # 	echo "$FILE does not exist"
 # fi

# CASE STATEMENTS
 #  read -p "Are you 21 ore over? Y/N " ANSWER
 # case $ANSWER in 
 # 	[yY] | [yY][eE][sS])
 # 		echo "You can have a beer! :)"
 # 		;;
 # 	[nN] | [nN][oO])
 # 		echo "Sorry, no drinking!"
 # 		;;
 # 	*)
 # 		echo "Please enter y/Yes or n/No"
 # 		;;
 # esac

# LOOPS

 # NAMES="Brad Kevin Alice Mark"
 # for NAME in $NAMES
 # do
 # 	echo "Hello $NAME"
 # done

 # FOR LOOP TO RENAME FILES
 #  FILES=$(ls *.txt)
 #  NEW="new"
 #  for FILE in $FILES
 #  do
 # 	 echo "Renaming $FILE to new-$FILE"
 # 	 mv $FILE $NEW-$FILE
 # done

 # WHILE LOOP - READ THROUGH A FILE LINE BY LINE
 # LINE=1
 # while read -r CURRENT_LINE
 # do
 # 	 echo "$LINE: $CURRENT_LINE"
 # 	 ((LINE++))
 # done < "./new-1.txt"

# FUNCTIONS

 # FUNCTION WITOUT PARAMETERS
 # function sayHello() {
 # 	 echo "Hello"
 # }

 # sayHello

 # FUNCTION WITH PARAMETERS
 # function greet() {
 # 	 echo "Hello, I am $1 and I am $2 years old"
 # }

 # greet "Dave" 35
